/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";



type GLTFResult = GLTF & {
  nodes: {
    Cube_007: THREE.SkinnedMesh;
    Cube_008: THREE.SkinnedMesh;
    Cube_009: THREE.SkinnedMesh;
    Cube_013_1: THREE.SkinnedMesh;
    Cube_013_2: THREE.SkinnedMesh;
    Mesh_001001: THREE.SkinnedMesh;
    Mesh_002001: THREE.SkinnedMesh;
    Mesh_003: THREE.SkinnedMesh;
    root: THREE.Bone;
    ["MCH-torsoparent"]: THREE.Bone;
    ["MCH-hand_ikparentL"]: THREE.Bone;
    ["MCH-upper_arm_ik_targetparentL"]: THREE.Bone;
    ["MCH-hand_ikparentR"]: THREE.Bone;
    ["MCH-upper_arm_ik_targetparentR"]: THREE.Bone;
    ["MCH-foot_ikparentL"]: THREE.Bone;
    ["MCH-thigh_ik_targetparentL"]: THREE.Bone;
    ["MCH-foot_ikparentR"]: THREE.Bone;
    ["MCH-thigh_ik_targetparentR"]: THREE.Bone;
  };
  materials: {
    peau: THREE.MeshBasicMaterial;
    hair: THREE.MeshBasicMaterial;
    chaussures: THREE.MeshBasicMaterial;
    ["bas chaussures"]: THREE.MeshBasicMaterial;
    short: THREE.MeshBasicMaterial;
    tshirt: THREE.MeshBasicMaterial;
  };
};

type ActionName =
  | "personneafter|A|0_T-Pose"
  | "personneafter|K|Cube_007|0_T-Pose"
  | "personneafter|K|Cube_008|0_T-Pose"
  | "personneafter|K|Cube_009|0_T-Pose"
  | "personneafter|K|Cube_013|0_T-Pose"
  | "personneafter|K|Mesh_001|0_T-Pose"
  | "personneafter|K|Mesh_002|0_T-Pose"
  | "personneafter|K|Mesh_003|0_T-Pose";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export function Personne(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials, animations } = useGLTF(
    "../../../vraipersonne.glb"
  ) as GLTFResult;
  //  const { actions } = useAnimations<GLTFActions>(animations, group.current);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
      <directionalLight
          intensity={1} // Intensité de la lumière
          position={[5, 5, 5]} // Position de la lumière
          target={group.current ?? undefined} // Cible de la lumière
        />
        <group name="personneafter_Rigify">
          <skinnedMesh
            name="Cube_007"
            geometry={nodes.Cube_007.geometry}
            material={materials.peau}
            skeleton={nodes.Cube_007.skeleton}
            morphTargetDictionary={nodes.Cube_007.morphTargetDictionary}
            morphTargetInfluences={nodes.Cube_007.morphTargetInfluences}
          />
          <skinnedMesh
            name="Cube_008"
            geometry={nodes.Cube_008.geometry}
            material={materials.peau}
            skeleton={nodes.Cube_008.skeleton}
            morphTargetDictionary={nodes.Cube_008.morphTargetDictionary}
            morphTargetInfluences={nodes.Cube_008.morphTargetInfluences}
          />
          <skinnedMesh
            name="Cube_009"
            geometry={nodes.Cube_009.geometry}
            material={materials.hair}
            skeleton={nodes.Cube_009.skeleton}
            morphTargetDictionary={nodes.Cube_009.morphTargetDictionary}
            morphTargetInfluences={nodes.Cube_009.morphTargetInfluences}
          />
          <group name="Cube_013">
            <skinnedMesh
              name="Cube_013_1"
              geometry={nodes.Cube_013_1.geometry}
              material={materials.chaussures}
              skeleton={nodes.Cube_013_1.skeleton}
              morphTargetDictionary={nodes.Cube_013_1.morphTargetDictionary}
              morphTargetInfluences={nodes.Cube_013_1.morphTargetInfluences}
            />
            <mesh
              name="Cube_013_2"
              geometry={nodes.Cube_013_2.geometry}
              material={materials["bas chaussures"]}
              //skeleton={nodes.Cube_013_2.skeleton}
              morphTargetDictionary={nodes.Cube_013_2.morphTargetDictionary}
              morphTargetInfluences={nodes.Cube_013_2.morphTargetInfluences}
            />
          </group>
          <skinnedMesh
            name="Mesh_001001"
            geometry={nodes.Mesh_001001.geometry}
            material={materials.peau}
            skeleton={nodes.Mesh_001001.skeleton}
            morphTargetDictionary={nodes.Mesh_001001.morphTargetDictionary}
            morphTargetInfluences={nodes.Mesh_001001.morphTargetInfluences}
          />
          <skinnedMesh
            name="Mesh_002001"
            geometry={nodes.Mesh_002001.geometry}
            material={materials.short}
            skeleton={nodes.Mesh_002001.skeleton}
            morphTargetDictionary={nodes.Mesh_002001.morphTargetDictionary}
            morphTargetInfluences={nodes.Mesh_002001.morphTargetInfluences}
          />
          <skinnedMesh
            name="Mesh_003"
            geometry={nodes.Mesh_003.geometry}
            material={materials.tshirt}
            skeleton={nodes.Mesh_003.skeleton}
            morphTargetDictionary={nodes.Mesh_003.morphTargetDictionary}
            morphTargetInfluences={nodes.Mesh_003.morphTargetInfluences}
          />
          <primitive object={nodes.root} />
          <primitive object={nodes["MCH-torsoparent"]} />
          <primitive object={nodes["MCH-hand_ikparentL"]} />
          <primitive object={nodes["MCH-upper_arm_ik_targetparentL"]} />
          <primitive object={nodes["MCH-hand_ikparentR"]} />
          <primitive object={nodes["MCH-upper_arm_ik_targetparentR"]} />
          <primitive object={nodes["MCH-foot_ikparentL"]} />
          <primitive object={nodes["MCH-thigh_ik_targetparentL"]} />
          <primitive object={nodes["MCH-foot_ikparentR"]} />
          <primitive object={nodes["MCH-thigh_ik_targetparentR"]} />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("../../../vraipersonne.glb");
